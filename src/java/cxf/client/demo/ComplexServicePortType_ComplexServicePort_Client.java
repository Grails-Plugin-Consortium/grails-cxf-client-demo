
package cxf.client.demo;

/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

import java.io.File;
import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

/**
 * This class was generated by Apache CXF 2.4.2
 * 2011-09-12T09:57:00.517-05:00
 * Generated source version: 2.4.2
 * 
 */
public final class ComplexServicePortType_ComplexServicePort_Client {

    private static final QName SERVICE_NAME = new QName("http://demo.client.cxf/", "ComplexService");

    private ComplexServicePortType_ComplexServicePort_Client() {
    }

    public static void main(String args[]) throws java.lang.Exception {
        URL wsdlURL = ComplexService.WSDL_LOCATION;
        if (args.length > 0 && args[0] != null && !"".equals(args[0])) { 
            File wsdlFile = new File(args[0]);
            try {
                if (wsdlFile.exists()) {
                    wsdlURL = wsdlFile.toURI().toURL();
                } else {
                    wsdlURL = new URL(args[0]);
                }
            } catch (MalformedURLException e) {
                e.printStackTrace();
            }
        }
      
        ComplexService ss = new ComplexService(wsdlURL, SERVICE_NAME);
        ComplexServicePortType port = ss.getComplexServicePort();  
        
        {
        System.out.println("Invoking complexMethod2...");
        cxf.client.demo.ComplexRequest _complexMethod2_request = null;
        cxf.client.demo.ComplexResponse _complexMethod2__return = port.complexMethod2(_complexMethod2_request);
        System.out.println("complexMethod2.result=" + _complexMethod2__return);


        }
        {
        System.out.println("Invoking complexMethod1...");
        cxf.client.demo.ComplexRequest _complexMethod1_request = null;
        cxf.client.demo.ComplexResponse _complexMethod1__return = port.complexMethod1(_complexMethod1_request);
        System.out.println("complexMethod1.result=" + _complexMethod1__return);


        }

        System.exit(0);
    }

}
